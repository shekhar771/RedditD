// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique // Add this line
  email         String?   @unique
  emailVerified DateTime?
  passwordHash  String?
  posts         Post[]

  image    String?
  accounts Account[]
  sessions Session[]
}

// comments      Comment[]

model subreddit {
  id        String   @id @default(cuid())
  name      String   @unique
  post      Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Post {
  id      String @id @default(cuid())
  title   String
  content Json?

  subreddit   subreddit @relation(fields: [subredditId], references: [id])
  subredditId String
  User        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

// author      User      @relation(fields: [authorId], references: [id])
